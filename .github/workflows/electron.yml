name: Desktop app build
on:
  push:
    tags: [ "*.*.*" ]
  workflow_dispatch:
jobs:
  build-app-debian-x86_64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
          sh rustup-init.sh -y --default-toolchain none
          rustup target add x86_64-unknown-linux-gnu
      - uses: actions/setup-node@v3
        name: Install NodeJS
        with:
          node-version: 16
      - name: Get version from tag name
        id: get_version
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
      - name: Checkout HABSpeaker
        uses: actions/checkout@v3
        with:
          repository: GiviMAD/openhab-addons
          ref: refs/tags/habspeaker-${{ steps.get_version.outputs.VERSION }}
          path: marketplace-addons
      - name: Build Electron App
        run: |
          sudo apt update
          sudo apt install -y build-essential libasound2-dev
          ./marketplace-addons/bundles/org.openhab.voice.habspeaker/web/tools/build-electron-linux-appimage.sh amd64
      - name: Upload artifact debian x86_64
        uses: actions/upload-artifact@v3
        with:
          name: HABSpeaker_Linux_x86_64
          path: marketplace-addons/bundles/org.openhab.voice.habspeaker/web/electron-release/**/HABSpeaker_*.AppImage
          retention-days: 5

  build-app-debian-arm64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup arm64
        run: |
          echo "adding arm64"
          sudo dpkg --add-architecture arm64
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-security main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-backports main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main multiverse universe" | sudo tee -a /etc/apt/sources.list
          sudo apt update || true
          sudo apt install -y pkg-config build-essential libasound2-dev:arm64 alsa-tools:arm64 gcc-10-aarch64-linux-gnu gcc-aarch64-linux-gnu gcc-9-aarch64-linux-gnu-base cpp-aarch64-linux-gnu cpp-9-aarch64-linux-gnu
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
          sh rustup-init.sh -y --default-toolchain none
          rustup target add aarch64-unknown-linux-gnu
      - uses: actions/setup-node@v3
        name: Install NodeJS
        with:
          node-version: 16
      - name: Get version from tag name
        id: get_version
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
      - name: Checkout HABSpeaker
        uses: actions/checkout@v3
        with:
          repository: GiviMAD/openhab-addons
          ref: refs/tags/habspeaker-${{ steps.get_version.outputs.VERSION }}
          path: marketplace-addons
      - name: Build Electron App
        run: |
          mkdir -p ~/.cargo
          echo "[target.aarch64-unknown-linux-gnu]" > ~/.cargo/config
          echo "linker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config
          export PKG_CONFIG_ALLOW_CROSS=1
          export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig/
          ./marketplace-addons/bundles/org.openhab.voice.habspeaker/web/tools/build-electron-linux-appimage.sh arm64
      - name: Upload artifact debian arm64
        uses: actions/upload-artifact@v3
        with:
          name: HABSpeaker_Linux_Arm64
          path: marketplace-addons/bundles/org.openhab.voice.habspeaker/web/electron-release/**/HABSpeaker_*.AppImage
          retention-days: 5

  build-app-macos-x86_64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
          sh rustup-init.sh -y --default-toolchain none
          rustup target add x86_64-apple-darwin
      - uses: actions/setup-node@v3
        name: Install NodeJS
        with:
          node-version: 16
      - name: Get version from tag name
        id: get_version
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
      - name: Checkout HABSpeaker
        uses: actions/checkout@v3
        with:
          repository: GiviMAD/openhab-addons
          ref: refs/tags/habspeaker-${{ steps.get_version.outputs.VERSION }}
          path: marketplace-addons
      - name: Build Electron App
        run: |
          export DYLD_LIBRARY_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/
          ./marketplace-addons/bundles/org.openhab.voice.habspeaker/web/tools/build-electron-macos-dmg.sh amd64
      - name: Upload artifact macos x86_64
        uses: actions/upload-artifact@v3
        with:
          name: HABSpeaker_macOS_x86_64
          path: marketplace-addons/bundles/org.openhab.voice.habspeaker/web/electron-release/**/HABSpeaker_*.dmg
          retention-days: 5

  build-app-macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
          sh rustup-init.sh -y --default-toolchain none
          rustup target add aarch64-apple-darwin
      - uses: actions/setup-node@v3
        name: Install NodeJS
        with:
          node-version: 16
      - name: Get version from tag name
        id: get_version
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
      - name: Checkout HABSpeaker
        uses: actions/checkout@v3
        with:
          repository: GiviMAD/openhab-addons
          ref: refs/tags/habspeaker-${{ steps.get_version.outputs.VERSION }}
          path: marketplace-addons
      - name: Build Electron App
        run: |
          export DYLD_LIBRARY_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/
          ./marketplace-addons/bundles/org.openhab.voice.habspeaker/web/tools/build-electron-macos-dmg.sh arm64
      - name: Upload artifact macos arm64
        uses: actions/upload-artifact@v3
        with:
          name: HABSpeaker_macOS_Arm64
          path: marketplace-addons/bundles/org.openhab.voice.habspeaker/web/electron-release/**/HABSpeaker_*.dmg
          retention-days: 5

  build-app-windows-x86_64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust using win.rustup.rs
        run: |
          # Disable the download progress bar which can cause perf issues
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest https://win.rustup.rs/ -OutFile rustup-init.exe
          .\rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --default-toolchain=none
          del rustup-init.exe
          rustup target add x86_64-pc-windows-msvc
        shell: powershell
      - uses: actions/setup-node@v3
        name: Install NodeJS
        with:
          node-version: 16
      - name: Get version from tag name
        id: get_version
        shell: bash
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
      - name: Checkout HABSpeaker
        uses: actions/checkout@v3
        with:
          repository: GiviMAD/openhab-addons
          ref: refs/tags/habspeaker-${{ steps.get_version.outputs.VERSION }}
          path: marketplace-addons
      - name: Build Electron App
        run: |
          .\marketplace-addons\bundles\org.openhab.voice.habspeaker\web\tools\build-electron-windows-exe.ps1
        shell: powershell
      - name: Upload artifact windows x86_64
        uses: actions/upload-artifact@v3
        with:
          name: HABSpeaker_Windows_x86_64
          path: marketplace-addons/bundles/org.openhab.voice.habspeaker/web/electron-release/**/HABSpeaker_*.exe
          retention-days: 5

  create_release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-app-debian-x86_64,build-app-debian-arm64,build-app-windows-x86_64,build-app-macos-x86_64,build-app-macos-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
        - uses: actions/checkout@v3
        - name: Get version from tag name
          id: get_version
          run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT
        - uses: actions/download-artifact@v3
        - name: Check tree
          run: ls -R
        - name: release
          uses: softprops/action-gh-release@v1
          id: create_release
          with:
            tag_name: release_${{ steps.get_version.outputs.VERSION }}
            name: HAB Speaker Desktop App v${{ steps.get_version.outputs.VERSION }}
            draft: false
            prerelease: false
            generate_release_notes: false
            body: Desktop client for the unofficial [openHAB](https://www.openhab.org) add-on [HAB Speaker v${{ steps.get_version.outputs.VERSION }}](https://github.com/GiviMAD/openhab-addons/releases/tag/habspeaker-${{ steps.get_version.outputs.VERSION }})
            files: |
              HABSpeaker_Linux_x86_64/${{ steps.get_version.outputs.VERSION }}/HABSpeaker_${{ steps.get_version.outputs.VERSION }}_linux_x86_64.AppImage
              HABSpeaker_Linux_Arm64/${{ steps.get_version.outputs.VERSION }}/HABSpeaker_${{ steps.get_version.outputs.VERSION }}_linux_arm64.AppImage
              HABSpeaker_macOS_x86_64/${{ steps.get_version.outputs.VERSION }}/HABSpeaker_${{ steps.get_version.outputs.VERSION }}_macOS_x64.dmg
              HABSpeaker_macOS_Arm64/${{ steps.get_version.outputs.VERSION }}/HABSpeaker_${{ steps.get_version.outputs.VERSION }}_macOS_arm64.dmg
              HABSpeaker_Windows_x86_64/${{ steps.get_version.outputs.VERSION }}/HABSpeaker_${{ steps.get_version.outputs.VERSION }}_windows_x64.exe
          env:
            GITHUB_TOKEN: ${{ github.token }}
